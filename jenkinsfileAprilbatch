node{

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
 echo "job name is: ${env.JOB_NAME}"
 echo "Node name is: ${env.NODE_NAME}"
 echo "Build number is: ${env.BUILD_NUMBER}"
 
def mavenHome = tool name: "Maven3.8.6"
try{    
stage('checkoutcode')
{
 git branch: 'development', credentialsId: 'f2a70cd3-8ab5-4681-9bfc-2a347c91afc6', url: 'https://github.com/aravapalli-aparna/maven-web-application.git'
}

stage('build')
{
 sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('Executesonarqubereport')
 {
     sh "${mavenHome}/bin/mvn clean sonar:sonar"
    
 }
 stage('uploadartifactsintonexus')
 {
     sh "${mavenHome}/bin/mvn deploy"
 }
stage('deploy')
{
    sshagent(['cc9a94a0-174c-4405-a85f-5c8717d39f21']) {
    sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.35.17:/opt/apache-tomcat-9.0.64/webapps"
}
}
*/
}catch(e){
 currentBuild.result = "FAILED" 
     throw e
}
finally{
sendSlackNotifications(currentBuild.result)
}
}//node closing
//belode code will use for send slack build notification
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
